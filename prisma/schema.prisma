generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgcrypto, unaccent]
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id        String   @id @default(dbgenerated("nanoid()"))
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String   @unique
  password String
  role     UserRole @default(USER)
}

enum EventStatus {
  DRAFT
  SUGGESTED
  PUBLISHED
}

model Event {
  id        String   @id @default(dbgenerated("nanoid()"))
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categories   Category[]
  dateEnd      String      @default("")
  dateStart    String      @default("")
  description  String      @default("")
  imageId      String      @default("")
  imageKey     String      @default("")
  linkFbEvent  String      @default("")
  linkLocation String      @default("")
  linkTickets  String      @default("")
  linkWebsite  String      @default("")
  location     String      @default("")
  region       String      @default("")
  slug         String      @default("")
  status       EventStatus @default(PUBLISHED)
  timeEnd      String      @default("")
  timeStart    String      @default("")
  title        String      @default("")
}

model Category {
  id String @id @default(dbgenerated("nanoid()"))

  events Event[]
  name   String  @unique
  slug   String  @unique
}

model Subscriber {
  id        String   @id @default(dbgenerated("nanoid()"))
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  name  String @default("")
}
